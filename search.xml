<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>杂谈</title>
      <link href="/2022/12/25/%E6%9D%82%E8%B0%88/"/>
      <url>/2022/12/25/%E6%9D%82%E8%B0%88/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇杂谈"><a href="#这是我的第一篇杂谈" class="headerlink" title="这是我的第一篇杂谈"></a>这是我的第一篇杂谈</h2>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编程</title>
      <link href="/2022/12/25/%E7%BC%96%E7%A8%8B/"/>
      <url>/2022/12/25/%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇C-文章"><a href="#这是我的第一篇C-文章" class="headerlink" title="这是我的第一篇C++文章"></a>这是我的第一篇C++文章</h2><h2 id="这是我的第一篇Ubuntu文章"><a href="#这是我的第一篇Ubuntu文章" class="headerlink" title="这是我的第一篇Ubuntu文章"></a>这是我的第一篇Ubuntu文章</h2><h2 id="这是我的第一篇Java文章"><a href="#这是我的第一篇Java文章" class="headerlink" title="这是我的第一篇Java文章"></a>这是我的第一篇Java文章</h2><h2 id="这是我的第一篇MySQL文章"><a href="#这是我的第一篇MySQL文章" class="headerlink" title="这是我的第一篇MySQL文章"></a>这是我的第一篇MySQL文章</h2>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语</title>
      <link href="/2022/12/25/%E8%8B%B1%E8%AF%AD/"/>
      <url>/2022/12/25/%E8%8B%B1%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇英语文章"><a href="#这是我的第一篇英语文章" class="headerlink" title="这是我的第一篇英语文章"></a>这是我的第一篇英语文章</h2>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络</title>
      <link href="/2022/12/25/%E7%BD%91%E7%BB%9C/"/>
      <url>/2022/12/25/%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇网络安全文章"><a href="#这是我的第一篇网络安全文章" class="headerlink" title="这是我的第一篇网络安全文章"></a>这是我的第一篇网络安全文章</h2>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学</title>
      <link href="/2022/12/24/%E6%95%B0%E5%AD%A6/"/>
      <url>/2022/12/24/%E6%95%B0%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇数学文章"><a href="#这是我的第一篇数学文章" class="headerlink" title="这是我的第一篇数学文章"></a>这是我的第一篇数学文章</h2>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文学</title>
      <link href="/2022/12/24/%E6%96%87%E5%AD%A6/"/>
      <url>/2022/12/24/%E6%96%87%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇文章"><a href="#这是我的第一篇文章" class="headerlink" title="这是我的第一篇文章"></a>这是我的第一篇文章</h2>]]></content>
      
      
      <categories>
          
          <category> 文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文学 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>categoryies</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[:root {  --trans-light: rgba(255, 255, 255, 0.75);  --trans-dark: rgba(25, 25, 25, 0.6);  --border-style: 1px solid rgb(169, 169, 169);  --backdrop-filter: blur(5px) saturate(150%);}/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }  /* 小冰分类分类磁铁黑夜模式适配 *//* 一般状态 */[data-theme="dark"] .magnet_link_context {  background: #1e1e1e;  color: antiquewhite;}/* 鼠标悬浮状态 */[data-theme="dark"] .magnet_link_context:hover {  background: #3ecdf1;  color: #f2f2f2;}@font-face {  /* 为载入的字体取名字(随意) */  font-family: 'YSHST';  /* 字体文件地址(相对或者绝对路径都可以) */  src: url(/font/优设好身体.woff2);  /* 定义加粗样式(加粗多少) */  font-weight: normal;  /* 定义字体样式(斜体/非斜体) */  font-style: normal;  /* 定义显示样式 */  font-display: block;}/*翻页按钮居中 */ #pagination {  width: 100%;  margin: auto;}/* 一级菜单居中 */#nav .menus_items {  position: absolute !important;  width: fit-content !important;  left: 50% !important;  transform: translateX(-50%) !important;}/* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {  display: flex !important;}/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(5) .menus_item_child {  left: -38px;}/* 夜间模式菜单栏发光字 */[data-theme="dark"] #nav .site-page,[data-theme="dark"] #nav .menus_items .menus_item .menus_item_child li a {  text-shadow: 0 0 2px rgb(179, 71, 241) !important;}/* 手机端适配 */[data-theme="dark"] #sidebar #sidebar-menus .menus_items .site-page {  text-shadow: 0 0 2px rgb(179, 71, 241) !important;}/* 侧边栏个人信息卡片动态渐变色 */#aside-content > .card-widget.card-info {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@-moz-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}/* 黑夜模式适配 */[data-theme="dark"] #aside-content > .card-widget.card-info {  background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content > .card-widget.card-info > #card-info-btn {  background-color: #3eb8be;  border-radius: 8px;}/* 鼠标样式 */#cursor {  position: fixed;  width: 16px;  height: 16px;  /* 这里改变跟随的底色 */  background: rgb(57, 197, 187);  border-radius: 8px;  opacity: 0.25;  z-index: 10086;  pointer-events: none;  transition: 0.2s ease-in-out;  transition-property: background, opacity, transform;}#cursor.hidden {  opacity: 0;}#cursor.hover {  opacity: 0.1;  transform: scale(2.5);  -webkit-transform: scale(2.5);  -moz-transform: scale(2.5);  -ms-transform: scale(2.5);  -o-transform: scale(2.5);}#cursor.active {  opacity: 0.5;  transform: scale(0.5);  -webkit-transform: scale(0.5);  -moz-transform: scale(0.5);  -ms-transform: scale(0.5);  -o-transform: scale(0.5);}/* #页面样式 *//* 首页文章卡片 */#recent-posts > .recent-post-item {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 25px;  border: var(--border-style);}/* 首页侧栏卡片 */#aside-content .card-widget {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 18px;  border: var(--border-style);}/* 文章页、归档页、普通页面 */div#post,div#page,div#archive {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border: var(--border-style);  border-radius: 20px;}/* 导航栏 */#page-header.nav-fixed #nav {  background: rgba(255, 255, 255, 0.75);  backdrop-filter: var(--backdrop-filter);}[data-theme="dark"] #page-header.nav-fixed #nav {  background: rgba(0, 0, 0, 0.7) !important;}/* 夜间模式遮罩 */[data-theme="dark"] #recent-posts > .recent-post-item,[data-theme="dark"] #aside-content .card-widget,[data-theme="dark"] div#post,[data-theme="dark"] div#archive,[data-theme="dark"] div#page {  background: var(--trans-dark);}/* 夜间模式页脚页头遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}/* 阅读模式 */.read-mode #aside-content .card-widget {  background: rgba(158, 204, 171, 0.5) !important;}.read-mode div#post {  background: rgba(158, 204, 171, 0.5) !important;}/* 夜间模式下的阅读模式 */[data-theme="dark"] .read-mode #aside-content .card-widget {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}[data-theme="dark"] .read-mode div#post {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}/* 背景宇宙星光  */#universe{  display: block;  position: fixed;  margin: 0;  padding: 0;  border: 0;  outline: 0;  left: 0;  top: 0;  width: 100%;  height: 100%;  pointer-events: none;  /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */  z-index: -1;}/********************************************音乐播放器********************************************************//* 播放器大小 */.music-player {  width: 570px;  height: 520px;}.music-player h3{  margin: 0px 0 1px!important;}@font-face {font-family: "iconfont";  src: url('iconfont.eot?t=1537976418058'); /* IE9*/  src: url('iconfont.eot?t=1537976418058#iefix') format('embedded-opentype'), /* IE6-IE8 */  url('data:application/x-font-woff;charset=utf-8;base64,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') format('woff'),  url('iconfont.ttf?t=1537976418058') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+*/  url('iconfont.svg?t=1537976418058#iconfont') format('svg'); /* iOS 4.1- */}.icon-prev:before { content: "\f0069"; }.icon-next:before { content: "\f006a"; }.icon-play:before { content: "\e66a"; }.icon-pause:before { content: "\e76a"; }.icon-random:before { content: "\e622"; }.icon-muted:before { content: "\e61e"; }.icon-volume:before { content: "\e87a"; }.icon-loop:before { content: "\e66c"; }.icon-single:before { content: "\e66d"; }/* 播放器位置 */.music-player {  position: relative;  margin: 0px auto;}/* 歌曲列表 */.music-player__list {  width: 100%;  padding: 10px;  margin-top: 30px;  background: rgba(0, 0, 0, 0.5);  border-radius: 5px;  -webkit-box-shadow: 0 2px 6px rgba(0, 0, 0, 0.5);  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.5);}.music__list__item {  padding-left: 25px;  color: #ccc;  position: relative;  margin-bottom: 10px;  font-size: 14px;  cursor: pointer;}.music__list__item:last-of-type {  margin: 0;}.music__list__item.play {  color: #fff;}.music__list__item.play:before {  font-family: 'iconfont';  content: "\e87a";  position: absolute;  left: 0px;  top: 4px;}/* 播放器主体 */.music-player__main {  height: 220px;                                /*180和25*/  padding: 25px;  box-shadow: 0 0 10px rgb(0 0 0 / 20%);  border-radius: 10px;  position: relative;  overflow: hidden;}/* 播放器主体模糊背景 */.music-player__blur {  width: 100%;  height: 100%;  position: absolute;  background-size: 100%;  left: 0;  top: 0;  z-index: -1;  -webkit-filter: blur(20px);  filter: blur(20px);}/* 播放器唱片效果 */.music-player__disc {  float: left;  width: 130px;  height: 130px;  background: url(/images/cd.png) no-repeat center;  background-size: 100%;  position: relative;}/* 唱片指针 */.music-player__pointer {  width: 25px;  position: absolute;  right: -10px;  top: 0;  -webkit-transform-origin: right top;  -ms-transform-origin: right top;  transform-origin: right top;  -webkit-transform: rotate(-15deg);  -ms-transform: rotate(-15deg);  transform: rotate(-15deg);  -webkit-transition: all 0.3s;  -o-transition: all 0.3s;  transition: all 0.3s;}/* 唱片指针播放状态 加play类名 */.music-player__pointer.play {  -webkit-transform: rotate(0deg);  -ms-transform: rotate(0deg);  transform: rotate(0deg);}/* 唱片歌曲图片 */.music-player__image {  width: 80px;  height: 80px;  border-radius: 50%;  position: absolute;  overflow: hidden;  left: 0;  right: 0;  top: 0;  bottom: 0;  margin: auto;}/* 播放器控件 */.music-player__controls {  width: 330px;  height: 130px;  float: right;}/* 歌曲信息 */.music__info {  width: 100%;  height: 50px;  margin-bottom: 15px;}.music__info .music__info--title {  color: #fff;}.music__info .music__info--title {  font-size: 16px;}/* 控件 */.player-control {  width: 100%;}.player-control__content {  overflow: hidden;}/* 播放暂停按钮 */.player-control__btns {  float: left;  overflow: hidden;}.player-control__btn {  float: left;  margin: 0 5px;  font-weight: bolder;  color: rgb(255, 255, 255);  cursor: pointer;}.player-control__volume {  float: right;  overflow: hidden;}.control__volume--progress {  float: left;  width: 100px;  position: relative;  top: 20px;                            /*原来8上边是100*/}.player__song--timeProgess{  font-size: 12px;  color: #fff;  padding: 0px 3px;  background: rgba(0, 0, 0, 0.3);  border-radius: 5px;}.player-control__content .nowTime{  float: left;}.player-control__content .totalTime{  float: right;}.music-player .progress {  background: rgba(0, 0, 0, 0.3);  height: 5px;  -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5) inset;  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5) inset;  overflow: hidden;  margin: 0.5rem 0!important;  border-radius: 2px;  position: relative;  cursor: pointer;}.music-player .progress .back {  width: 0px;  height: 100%;  border-radius: 2px;  background: rgb(12, 182, 212);}.music-player .progress .pointer {  width: 7px;  height: 7px;  background: #fff;  border-radius: 50%;  opacity: 0;  -webkit-transition: opacity 0.3s;  -o-transition: opacity 0.3s;  transition: opacity 0.3s;  position: absolute;  top: -1px;  left: 0;}.music-player .progress:hover .pointer {  opacity: 1;}/* 播放 画片 动画 */@-webkit-keyframes disc {  from {      -webkit-transform: rotate(0deg);      transform: rotate(0deg);  }  to {      -webkit-transform: rotate(360deg);      transform: rotate(360deg);  }}@keyframes disc {  from {      -webkit-transform: rotate(0deg);      transform: rotate(0deg);  }  to {      -webkit-transform: rotate(360deg);      transform: rotate(360deg);  }}.music-player__image.play {  -webkit-animation: disc 5s linear 0s infinite;  animation: disc 5s linear 0s infinite;}/*  播放进度  */.player__song--progress {  width: 100%;  margin-top: 15px;}.music-player h1, .music-player h2, .music-player h3,.music-player h4, .music-player h5, .music-player h6, .music-player p {  margin: 0; padding: 0;}.music-player li { list-style: none; }/* 作者: 『轻笑Chuckle』链接: https://www.chuckle.top/article/3322c8a8.html来源: 轻笑Chuckle著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 *//**************************************顶部加载条*************************************************************************************/.pace {  -webkit-pointer-events: none;  pointer-events: none;  -webkit-user-select: none;  -moz-user-select: none;  user-select: none;}.pace-inactive {  display: none;}.pace .pace-progress {  background: #e90f92;  position: fixed;  z-index: 2000;  top: 0;  right: 100%;  width: 100%;  height: 2px;}.pace .pace-progress-inner {  display: block;  position: absolute;  right: 0px;  width: 100px;  height: 100%;  box-shadow: 0 0 10px #e90f92, 0 0 5px #e90f92;  opacity: 1.0;  -webkit-transform: rotate(3deg) translate(0px, -4px);  -moz-transform: rotate(3deg) translate(0px, -4px);  -ms-transform: rotate(3deg) translate(0px, -4px);  -o-transform: rotate(3deg) translate(0px, -4px);  transform: rotate(3deg) translate(0px, -4px);}.pace .pace-activity {  display: block;  position: fixed;  z-index: 2000;  top: 15px;  right: 15px;  width: 14px;  height: 14px;  border: solid 2px transparent;  border-top-color: #e90f92;  border-left-color: #e90f92;  border-radius: 10px;  -webkit-animation: pace-spinner 400ms linear infinite;  -moz-animation: pace-spinner 400ms linear infinite;  -ms-animation: pace-spinner 400ms linear infinite;  -o-animation: pace-spinner 400ms linear infinite;  animation: pace-spinner 400ms linear infinite;}@-webkit-keyframes pace-spinner {  0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }  100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }}@-moz-keyframes pace-spinner {  0% { -moz-transform: rotate(0deg); transform: rotate(0deg); }  100% { -moz-transform: rotate(360deg); transform: rotate(360deg); }}@-o-keyframes pace-spinner {  0% { -o-transform: rotate(0deg); transform: rotate(0deg); }  100% { -o-transform: rotate(360deg); transform: rotate(360deg); }}@-ms-keyframes pace-spinner {  0% { -ms-transform: rotate(0deg); transform: rotate(0deg); }  100% { -ms-transform: rotate(360deg); transform: rotate(360deg); }}@keyframes pace-spinner {  0% { transform: rotate(0deg); transform: rotate(0deg); }  100% { transform: rotate(360deg); transform: rotate(360deg); }}/* 在下面修改进度条外观 */.pace .pace-progress {  background: #1ef4fbec; /*进度条颜色*/  height: 3px;/* 进度条厚度 */}.pace .pace-progress-inner {  box-shadow: 0 0 10px #1ef4fbce, 0 0 5px #1ecffbd0; /*阴影颜色*/}.pace .pace-activity {  border-top-color: #1edafbe5;/*上边框颜色*/  border-left-color: #1ef4fbec;/*左边框颜色*/}/* 作者: 『轻笑Chuckle』链接: https://chuckle.top/article/13d6481a.html来源: 轻笑Chuckle著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 */]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/iconfont.css"/>
      <url>/css/iconfont.css</url>
      
        <content type="html"><![CDATA[@font-face {  font-family: "iconfont"; /* Project id  */  src: url('iconfont.ttf?t=1672123175121') format('truetype');}.iconfont {  font-family: "iconfont" !important;  font-size: 30px;  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.icon-icon_bilibili-circle:before {  content: "\e504";}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/cursor.js"/>
      <url>/js/cursor.js</url>
      
        <content type="html"><![CDATA[var CURSOR;Math.lerp = (a, b, n) => (1 - n) * a + n * b;const getStyle = (el, attr) => {    try {        return window.getComputedStyle            ? window.getComputedStyle(el)[attr]            : el.currentStyle[attr];    } catch (e) {}    return "";};class Cursor {    constructor() {        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    move(left, top) {        this.cursor.style["left"] = `${left}px`;        this.cursor.style["top"] = `${top}px`;    }    create() {        if (!this.cursor) {            this.cursor = document.createElement("div");            this.cursor.id = "cursor";            this.cursor.classList.add("hidden");            document.body.append(this.cursor);        }        var el = document.getElementsByTagName('*');        for (let i = 0; i < el.length; i++)            if (getStyle(el[i], "cursor") == "pointer")                this.pt.push(el[i].outerHTML);        document.body.appendChild((this.scr = document.createElement("style")));        // 这里改变鼠标指针的颜色 由svg生成        this.scr.innerHTML = `* {cursor: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' width='14px' height='14px'><circle cx='4' cy='4' r='4' opacity='1.0' fill='rgb(57, 197, 187)'/></svg>") 4 4, auto}`;    }    refresh() {        this.scr.remove();        this.cursor.classList.remove("hover");        this.cursor.classList.remove("active");        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    init() {        document.onmouseover  = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.add("hover");        document.onmouseout   = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.remove("hover");        document.onmousemove  = e => {(this.pos.curr == null) && this.move(e.clientX - 8, e.clientY - 8); this.pos.curr = {x: e.clientX - 8, y: e.clientY - 8}; this.cursor.classList.remove("hidden");};        document.onmouseenter = e => this.cursor.classList.remove("hidden");        document.onmouseleave = e => this.cursor.classList.add("hidden");        document.onmousedown  = e => this.cursor.classList.add("active");        document.onmouseup    = e => this.cursor.classList.remove("active");    }    render() {        if (this.pos.prev) {            this.pos.prev.x = Math.lerp(this.pos.prev.x, this.pos.curr.x, 0.15);            this.pos.prev.y = Math.lerp(this.pos.prev.y, this.pos.curr.y, 0.15);            this.move(this.pos.prev.x, this.pos.prev.y);        } else {            this.pos.prev = this.pos.curr;        }        requestAnimationFrame(() => this.render());    }}(() => {    CURSOR = new Cursor();    // 需要重新获取列表时，使用 CURSOR.refresh()})();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/light.js"/>
      <url>/js/light.js</url>
      
        <content type="html"><![CDATA[// 霓虹灯效果// 颜色数组var arr = ["#39c5bb", "#f14747", "#f1a247", "#f1ee47", "#b347f1", "#1edbff", "#ed709b", "#5636ed"];// 颜色索引var idx = 0;// 切换颜色function changeColor() {    // 仅夜间模式才启用    if (document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark') {        if (document.getElementById("site-name"))            document.getElementById("site-name").style.textShadow = arr[idx] + " 0 0 15px";        if (document.getElementById("site-title"))            document.getElementById("site-title").style.textShadow = arr[idx] + " 0 0 15px";        if (document.getElementById("site-subtitle"))            document.getElementById("site-subtitle").style.textShadow = arr[idx] + " 0 0 10px";        if (document.getElementById("post-info"))            document.getElementById("post-info").style.textShadow = arr[idx] + " 0 0 5px";        try {            document.getElementsByClassName("author-info__name")[0].style.textShadow = arr[idx] + " 0 0 12px";            document.getElementsByClassName("author-info__description")[0].style.textShadow = arr[idx] + " 0 0 12px";        } catch {                    }        idx++;        if (idx == 8) {            idx = 0;        }    } else {        // 白天模式恢复默认        if (document.getElementById("site-name"))            document.getElementById("site-name").style.textShadow = "#1e1e1ee0 1px 1px 1px";        if (document.getElementById("site-title"))            document.getElementById("site-title").style.textShadow = "#1e1e1ee0 1px 1px 1px";        if (document.getElementById("site-subtitle"))            document.getElementById("site-subtitle").style.textShadow = "#1e1e1ee0 1px 1px 1px";        if (document.getElementById("post-info"))            document.getElementById("post-info").style.textShadow = "#1e1e1ee0 1px 1px 1px";        try {            document.getElementsByClassName("author-info__name")[0].style.textShadow = "";            document.getElementsByClassName("author-info__description")[0].style.textShadow = "";        } catch {                    }    }}// 开启计时器window.onload = setInterval(changeColor, 1200);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[var now=new Date;function createtime(){  now.setTime(now.getTime()+1e3);  var e=new Date("12/24/2022 00:00:00"),  t=Math.trunc(234e8+(now-e)/1e3*17),  a=(t/1496e5).toFixed(6),  r=new Date("12/24/2022 00:00:00"),  n=(now-r)/1e3/60/60/24,  o=Math.floor(n),  i=(now-r)/1e3/60/60-24*o,  s=Math.floor(i);  1==String(s).length&&(s="0"+s);  var l=(now-r)/1e3/60-1440*o-60*s,  c=Math.floor(l);  1==String(c).length&&(c="0"+c);  var d=(now-r)/1e3-86400*o-3600*s-60*c,  g=Math.round(d);  1==String(g).length&&(g="0"+g);  let b="";b=s<18&&s>=9?`<img class='boardsign' src='https://sourcebucket.s3.ladydaily.com/badge/F小屋-科研摸鱼中.svg' title='什么时候能够实现财富自由呀~'><br> 本站居然运行了 ${o} 天 ${s} 小时 ${c} 分 ${g} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀`:`<img class='boardsign' src='https://sourcebucket.s3.ladydaily.com/badge/F小屋-下班休息啦.svg'  title='下班了就该开开心心地玩耍~'><br> 本站居然运行了 ${o} 天 ${s} 小时 ${c} 分 ${g} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀`,document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=b)}setInterval((()=>{createtime()}),1e3);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/player.js"/>
      <url>/js/player.js</url>
      
        <content type="html"><![CDATA[//创建一个音乐播放器的类 单例模式class Player {    constructor() { //类的构造函数        //如果没有实例化，就去构造一个实例        return this.getInstance(...arguments);    }    //构建实例    getInstance() {        let instance = new PlayerCreator(...arguments);        //让实例可以使用到Player的原型的属性方法        // instance.__proto__=Player.prototype;        // instance.constructor=Player;        //把构建好的实例挂在Player类上        Player.instance = instance;        return instance;    }}//歌曲信息class Musics {    //歌曲    constructor() {        this.songs = [{                id: 1,                title: '无法传达的爱恋',                singer: '米泽圆',                songUrl: './songs/米泽圆 (よねざわ まどか) - 届かない恋 (无法传达的爱恋) (Live at Campus Fes_TV Anime Ver_).mp3',                imageUrl: './images/songs/head.webp'            },            {                id: 1,                title: "We Don't Talk Anymore",                singer: 'Charlie Puth',                songUrl: "./songs/Charlie Puth _ Selena Gomez - We Don't Talk Anymore.mp3",                imageUrl: './images/songs/head2.webp'            },            {                id: 1,                title: 'Attention',                singer: 'Charlie Puth',                songUrl: './songs/Charlie Puth - Attention.mp3',                imageUrl: './images/songs/head3.webp'            },        ]    }    //根据索引获取歌曲的方法    getSongByNum(index) {        return this.songs[index];    }}//真正的构建播放器的类class PlayerCreator {    constructor() {        this.audio = document.querySelector('.music-player__audio') // Audio dom元素, 因为很多api都是需要原生audio调用的，所以不用jq获取        // this.audio.muted = true; // 控制静音        this.audio.volume = 0.2;        //工具        this.util = new Util();        this.musics = new Musics(); //歌曲信息        this.song_index = 0; // 当前播放的歌曲索引        this.loop_mode = 1; // 1 2        // 下方歌曲列表容器        this.song_list = $('.music__list_content');        this.render_doms = { //切换歌曲时需要渲染的dom组            title: $('.music__info--title'),            singer: $('.music__info--singer'),            image: $('.music-player__image img'),            blur: $('.music-player__blur')        }        this.ban_dom = { //禁音时需要渲染的dom组            control__btn: $('.control__volume--icon')        }        // 时间显示容器        this.render_time = {            now: $('.nowTime'),            total: $('.totalTime')        }        // 唱片        this.disc = {            image: $('.music-player__image'),            pointer: $('.music-player__pointer')        };        //播放器初始化        this.init();    }    //初始化函数    init() {        this.renderSongList();        this.renderSongStyle();        this.bindEventListener();    }    //生成播放列表    renderSongList() {        let _str = '';        this.musics.songs.forEach((song, i) => {            _str += `<li class="music__list__item">${song.title}</li>`        });        this.song_list.html(_str);    }    //根据歌曲去渲染视图    renderSongStyle() {        let {            title,            singer,            songUrl,            imageUrl        } = this.musics.getSongByNum(this.song_index);        this.audio.src = songUrl;        this.render_doms.title.html(title);        this.render_doms.singer.html(singer);        this.render_doms.image.prop('src', imageUrl);        this.render_doms.blur.css('background-image', 'url("' + imageUrl + '")');        //切换列表中的item的类名 play        this.song_list.find('.music__list__item').eq(this.song_index).addClass('play').siblings().removeClass('play');    }    //绑定各种事件    bindEventListener() {        //播放按钮        this.$play = new Btns('.player-control__btn--play', {            click: this.handlePlayAndPause.bind(this)        });        //上一首        this.$prev = new Btns('.player-control__btn--prev', {            click: this.changeSong.bind(this, 'prev')        });        //下一首        this.$next = new Btns('.player-control__btn--next', {            click: this.changeSong.bind(this, 'next')        });        //循环模式        this.$mode = new Btns('.player-control__btn--mode', {            click: this.changePlayMode.bind(this)        });        //禁音        this.$ban = new Btns('.control__volume--icon', {            click: this.banNotes.bind(this)        })        //列表点击        this.song_list.on('click', 'li', (e) => {            let index = $(e.target).index();            this.changeSong(index);        })        //音量控制 audio标签音量 vlouem 属性控制0-1        new Progress('.control__volume--progress', {            min: 0,            max: 1,            value: this.audio.volume,            handler: (value) => { //更改进度时                this.audio.volume = value;            }        })        //歌曲进度 this.audio.duration        //可以播放的时候触发（歌曲的基本信息都已经获取到了）        this.audio.oncanplay = () => {            //避免重复实例化            if (this.progress) {                this.progress.max = this.audio.duration; //切换歌曲后更新时长                this.render_time.total.html(this.util.formatTime(this.audio.duration));                return false;            };            this.progress = new Progress('.player__song--progress', {                min: 0,                max: this.audio.duration,                value: 0,                handler: (value) => {                    this.audio.currentTime = value;                }            })            //调整总时长            this.render_time.total.html(this.util.formatTime(this.audio.duration));        }        //会在播放的时候持续触发        this.audio.ontimeupdate = () => {            this.progress.setValue(this.audio.currentTime);            //调整当前时长            this.render_time.now.html(this.util.formatTime(this.audio.currentTime));        }        //当歌曲播放完成的时候        this.audio.onended = () => {            this.changeSong('next');            //播放完，换歌后，重新播放            this.audio.play();        }    }    //播放暂停控制    handlePlayAndPause() {        let _o_i = this.$play.$el.find('i');        //this.audio.pauseed值为true 说明目前是不播放        if (this.audio.paused) { //现在是暂停的 要播放            this.audio.play();            _o_i.removeClass('icon-play').addClass('icon-pause');            this.disc.image.addClass('play');            this.disc.pointer.addClass('play')        } else {            this.audio.pause();            _o_i.addClass('icon-play').removeClass('icon-pause');            this.disc.image.removeClass('play');            this.disc.pointer.removeClass('play');        }    }    //更改循环模式    changePlayMode() {        this.loop_mode++;        if (this.loop_mode > 2) this.loop_mode = 0;        this.renderPlayMode();    }    //更改按钮样式    renderPlayMode() {        let _classess = ['loop', 'random', 'single'];        let _o_i = this.$mode.$el.find('i');        //prop 改一些标签的自有属性 attr改一些标签的自定义属性        _o_i.prop('class', 'iconfont icon-' + _classess[this.loop_mode])    }    //更改歌曲索引    changeSongIndex(type) {        if (typeof type === 'number') {            this.song_index = type;        } else {            if (this.loop_mode === 0) {                //列表循环                this.song_index += type === 'next' ? 1 : -1;                if (this.song_index > this.musics.songs.length - 1) this.song_index = 0;                if (this.song_index < 0) this.song_index = this.musics.songs.length - 1;            } else if (this.loop_mode === 1) {                //随机播放                let _length = this.musics.songs.length;                let _random = Math.floor(Math.random() * _length);                for (let i = 0; i < 10000; i++) { //随机的数为本身则继续随机                    if (this.song_index == _random) {                        _random = Math.floor(Math.random() * _length);                    } else {                        this.song_index = _random;                        break;                    }                }            } else if (this.loop_mode === 2) {                this.song_index = this.song_index;            }        }    }    //歌曲时长    songTime() {        let totalMinute = parseInt(this.audio.duration / 60) < 10 ? "0" + parseInt(this.audio.duration / 60) : parseInt(this.audio.duration / 60);        let totalSecond = parseInt(this.audio.duration % 60) < 10 ? "0" + parseInt(this.audio.duration % 60) : parseInt(this.audio.duration % 60);        $('.totalTime').text(totalMinute + ':' + totalSecond);    }    //切换歌曲    changeSong(type) {        //更改索引        this.changeSongIndex(type);        //记录切歌前的状态        let _is_pause = this.audio.paused;        //切歌后更改视图显示        this.renderSongStyle();        //如果切歌前是在播放，就继续播放        if (!_is_pause) this.audio.play();    }    //禁音    banNotes() {        let _o_i = this.$ban.$el.find("i");        if (this.audio.muted == true) { //如果禁音则开启            this.audio.muted = false;            _o_i.removeClass('icon-muted').addClass('icon-volume');        } else {            this.audio.muted = true;            _o_i.removeClass('icon-volume').addClass('icon-muted');        }    }}//进度条class Progress {    constructor(selector, options) {        $.extend(this, options);        ///给this挂载传入的参数        this.$el = $(selector);        this.width = this.$el.width();        this.init();    }    //进度条初始化    init() {        this.renderBackAndPointer();        this.bindEvents();        this.drag();        this.value;        this.changeDOMStyle(this.width * this.value);    }    //为进度条渲染back和pointer    renderBackAndPointer() {        this.$back = $('<div class="back">');        this.$pointer = $('<div class="pointer">');        this.$el.append(this.$back);        this.$el.append(this.$pointer);    }    setValue(value) { //主动调用，传入value值，设置进度条样式        let _distance = this.width * value / (this.max - this.min);        this.changeDOMStyle(_distance);    }    drag() {        let ele = this.$pointer;        let father = this.$el;        let flag = false; //鼠标是否点击        ele.mousedown((e) => {            flag = true;            let mousePos = {                x: e.offsetX            }            $(document).mousemove((e) => {                if (flag === true) {                    let _left = e.clientX - father.offset().left - mousePos.x;                    let _distance = Math.max(0, Math.min(_left, father.outerWidth(false) - ele.outerWidth(false)))                    let _ratio = _distance / father.outerWidth(false);                    let _value = _ratio * (this.max - this.min); //当前的音量值                    this.changeDOMStyle(_distance);                    this.handler(_value); //更改进度之后，执行回调                }            })        })        $(document).mouseup(() => {            flag = false;        })    }    bindEvents() { //鼠标点击时更改        this.$el.click((e) => {            let _x = e.offsetX; //鼠标距离元素左边的距离            let _ratio = _x / this.width;            let _value = _ratio * (this.max - this.min); //当前的音量值            this.changeDOMStyle(_x);            this.handler(_value); //更改进度之后，执行回调        })    }    //更改pointer和back    changeDOMStyle(distance) {        this.$back.width(distance + 7 == 7 ? 0 : distance + 7);//进度为0时将进度条背景改为0否则加上进度按钮的长度        this.$pointer.css('left', distance + 'px');    }}//按钮类 class Btns {    constructor(selector, handlers) {        this.$el = $(selector); //元素        this.bindEvents(handlers);    }    bindEvents(handlers) { //绑定事件        for (const event in handlers) {            //使用值的时候保证键值对在对象中是存在的            if (handlers.hasOwnProperty(event)) {                this.$el.on(event, handlers[event]);            }        }    }}new Player();document.addEventListener('pjax:complete', (e) => {    new Player();})// 作者: 『轻笑Chuckle』// 链接: https://www.chuckle.top/article/3322c8a8.html// 来源: 轻笑Chuckle// 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById("universe"),o=!0,a="180,184,240",r="226,225,142",d="226,225,224",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute("width",n),s.setAttribute("height",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle="rgba("+a+","+this.opacity+")",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle="rgba("+d+","+this.opacity+")",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle="rgba("+d+","+(this.opacity-this.opacity/20*t)+")",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle="rgba("+r+","+this.opacity+")",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener("resize",f,!1),function(){h=s.getContext("2d");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};dark()]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/utill.js"/>
      <url>/js/utill.js</url>
      
        <content type="html"><![CDATA[class Util {    constructor() {        if (Util.instance) return Util.instance;        return this.getInstance(...arguments);    }    getInstance() {        var instance = {            /*             *   formatTime 格式化时间（s）为 hour:minutes:seconds             *   @params  time  required number (s)             *                *   return hour:minutes:seconds string             */            formatTime(time) {                //没有传time的时候                if (time === undefined) {                    this.handlerError(123, {                        method: 'formate',                        param: 'time'                    });                    return false;                }                let _time = Math.floor(time);                let _minutes = Math.floor(_time / 60);                let _hours = Math.floor(_minutes / 60);                let _seconds = _time - (_minutes * 60);                return (_hours ? this.fillZero(_hours) + ':' : '') + this.fillZero(_minutes - (_hours * 60)) + ':' + this.fillZero(_seconds);            },            /*             *   fillZero 为小于10的数字补0             *   @params  num  required number             *   return '01'.. string             */            fillZero(num) {                //当没有传time的时候                if (num === undefined) {                    this.handlerError(123, {                        method: 'fillZero',                        param: 'num'                    });                    return false;                }                //这个函数只是让我们在渲染/显示的时候有一个不同的效果，不要操作原数据                return num > 9 ? num : '0' + num;            },            errors: {                123: ({                    method,                    param                }) => {                    return method + 'function need a param ' + param;                }            },            handlerError(code, options) { //处理报错                console.error('[until error] message' + this.errors[code](options));            }        }        Util.instance = instance;        return instance;    }}//为了这个工具以后在模块化环境中依然可以使用，需要判断一下，如果是在模块化环境，就将其暴露出去//commonJsif (typeof module === 'object' && typeof module.exports === 'object') {    module.exports = Util;}//AMDif (typeof define === 'function' && define.amd) {    define('util', [], function () {        return Util;    });}// 作者: 『轻笑Chuckle』// 链接: https://www.chuckle.top/article/3322c8a8.html// 来源: 轻笑Chuckle// 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<!-- 播放器 --><div class="music-player"><!-- audio标签 --><audio class="music-player__audio" ></audio><!-- 播放器主体 --><div class="music-player__main"><!-- 模糊背景 --><div class="music-player__blur"></div><!-- 唱片 --><div class="music-player__disc"><!-- 唱片图片 --><div class="music-player__image"><img width="100%" src="" alt=""></div><!-- 指针 --><div class="music-player__pointer"><img width="100%" src="/images/cd_tou.png" alt=""></div></div><!-- 控件主体 --><div class="music-player__controls"><!-- 歌曲信息 --><div class="music__info"><h3 class="music__info--title">...</h3></div><!-- 控件... --><div class="player-control"><div class="player-control__content"><div class="player-control__btns"><div class="player-control__btn player-control__btn--prev"><i class="iconfont icon-prev"></i></div><div class="player-control__btn player-control__btn--play"><i class="iconfont icon-play"></i></div><div class="player-control__btn player-control__btn--next"><i class="iconfont icon-next"></i></div><div class="player-control__btn player-control__btn--mode"><i class="iconfont icon-random"></i></div></div><div class="player-control__volume"><div class="control__volume--icon player-control__btn"><i class="iconfont icon-volume"></i></div><div class="control__volume--progress progress"></div></div></div><div class="player-control__content"><div class="player__song--progress progress"></div><div class="player__song--timeProgess nowTime">00:00</div><div class="player__song--timeProgess totalTime">00:00</div></div></div></div></div><!-- 歌曲列表 --><div class="music-player__list"><ul class="music__list_content"></ul></div></div><script src="/js/utill.js"></script><script src="https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.slim.min.js"></script><script src="/js/player.js?10"></script><div style="text-align:center;margin:-100px 0; font:normal 14px/24px 'MicroSoft YaHei';color:#ffffff"></div><!-- 作者: 『轻笑Chuckle』链接: https://www.chuckle.top/article/3322c8a8.html来源: 轻笑Chuckle著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 -->]]></content>
      
    </entry>
    
    
  
</search>
